# Check out https://docs.codemagic.io/yaml/building-a-react-native-app/ for more information
# Please review and update values
workflows:
    react-native-android:
        name: React Native Android
        max_build_duration: 120
        instance_type: mac_pro
        environment:
            node: 16.14.0
            vars:
                package: '<%= applicationPrefix %>.<%= applicationName %>'
            groups:
                - certificate_credentials
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: '*'
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                  npm install
            - name: Set Android SDK location
              script: |
                  echo "sdk.dir=$ANDROID_SDK_ROOT" > "$CM_BUILD_DIR/android/local.properties"
            - name: Set up keystore
              script: |
                  echo $RNCI_KEYSTORE | base64 --decode > /tmp/release.keystore
                  # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
                  cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
                  storePassword=$RNCI_KEYSTORE_PASSWORD
                  keyPassword=$RNCI_KEY_ALIAS_PASSWORD
                  keyAlias=$RNCI_KEY_ALIAS_USERNAME
                  storeFile=/tmp/keystore.keystore
                  EOF
            - name: Tests                       # Insert before the build command
              script: npm test
            - name: Build Android release
              script: |
                  export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
                  cd android && ./gradlew assembleRelease
        artifacts:
            - android/app/build/outputs/**/*.apk
            - android/app/build/outputs/**/*.aab
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/yaml-publishing/email
            email:
                recipients:
                    - <%= contactEmail %>
                notify:
                    success: true     # To not receive a notification when a build succeeds
                    failure: false    # To not receive a notification when a build fails
            google_play:
                credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
                track: internal # Name of the track: internal, alpha, beta, production, internal app sharing, or your custom track name
    react-native-ios:
        name: React Native iOS
        max_build_duration: 120
        instance_type: mac_pro
        environment:
            node: 16.14.0
            xcode: 12.5
            cocoapods: default
            vars:
                XCODE_WORKSPACE: '<%= applicationName %>.xcworkspace'
                CODE_SCHEME: '<%= applicationName %>'
        triggering:
            events:
                - push
                - tag
                - pull_request
            branch_patterns:
                - pattern: '*'
                  include: true
                  source: true
        scripts:
            - name: Install npm dependencies
              script: |
                  npm install
            - name: Install CocoaPods dependencies
              script: |
                  cd ios && pod install
            - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
              script: |
                  keychain initialize
            - name: Fetch signing files
              script: |
                  # For information about Codemagic CLI commands visit: https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/README.md
                  # For details about the --type paramater below - https://github.com/codemagic-ci-cd/cli-tools/blob/master/docs/app-store-connect/fetch-signing-files.md#--typeios_app_adhoc--ios_app_development--ios_app_inhouse--ios_app_store--mac_app_development--mac_app_direct--mac_app_store--mac_catalyst_app_development--mac_catalyst_app_direct--mac_catalyst_app_store--tvos_app_adhoc--tvos_app_development--tvos_app_inhouse--tvos_app_store
                  app-store-connect fetch-signing-files "$BUNDLE_ID" --type IOS_APP_STORE --create
            - name: Use system default keychain
              script: |
                  keychain add-certificates
            - name: Increment build number
              script: |
                  #!/bin/sh
                  set -e
                  set -x
                  cd $CM_BUILD_DIR/ios
                  # agvtool new-version -all $(($BUILD_NUMBER + 1))
                  agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_APP_ID") + 1))
            - name: Set up code signing settings on Xcode project
              script: |
                  xcode-project use-profiles --warn-only
            - name: Tests                       # Insert before the build command
              script: npm test
            - name: Build ipa for distribution
              script: |
                  xcode-project build-ipa --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
        publishing:
            # See the following link for details about email publishing - https://docs.codemagic.io/yaml-publishing/email
            email:
                recipients:
                    - <%= contactEmail %>
                notify:
                    success: true     # To not receive a notification when a build succeeds
                    failure: false    # To not receive a notification when a build fails
            app_store_connect:
                api_key: $APP_STORE_CONNECT_PRIVATE_KEY # Contents of the API key saved as a secure environment variable
                key_id: $APP_STORE_CONNECT_KEY_IDENTIFIER # Alphanumeric value that identifies the API key
                issuer_id: $APP_STORE_CONNECT_ISSUER_ID # Alphanumeric value that identifies who created the API key
                submit_to_testflight: true
