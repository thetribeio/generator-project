version: '2.1'

orbs:
<% if (deployment === 'kubernetes') { %>
  docker: circleci/docker@2.0.1
<% } %>
  node: circleci/node@4.5.1

executors:
  node:
    docker:
      - image: node:16.14.0

jobs:
  <%= packageName %>-yarn-install:
    executor: node
    steps:
      - checkout
      - node/install-packages:
          app-dir: <%= packagePath %>
          include-branch-in-cache-key: false
          pkg-manager: yarn
      - persist_to_workspace:
          root: .
          paths:
              - <%= packagePath %>/node_modules

  <%= packageName %>-lint:
    executor: node
    working_directory: ~/project/<%= packagePath %>
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: ~/project
      - run:
          command: yarn lint

<% if (deployment === 'ansible') { %>
  <%= packageName %>-build:
    executor: node
    working_directory: ~/project/<%= packagePath %>
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: ~/project
      - run: echo "export default '${CIRCLE_SHA1}';" > src/version.ts
      - run:
          command: yarn build
          environment:
            DISABLE_ESLINT_PLUGIN: 'true'
            NODE_ENV: production
      - persist_to_workspace:
          root: ~/project
          paths:
              - <%= packagePath %>/build

  <%= packageName %>-archive:
    executor: node
    working_directory: ~/project/<%= packagePath %>
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: ~/project
      - run:
          name: Create archive
          command: |
            tar --create --gzip --file=archive.tar.gz --owner=0 --group=0 \
              build/ \
      - store_artifacts:
          path: archive.tar.gz
          destination: <%= packageName %>.tar.gz
      - persist_to_workspace:
          root: ~/project
          paths:
            - <%= packagePath %>/archive.tar.gz

  <%= packageName %>-sentry-release:
    docker:
      - image: getsentry/sentry-cli:1.61.0
        entrypoint: ''
        environment:
          SENTRY_PROJECT: <%= projectName %>-<%= packageName %>
    steps:
      - attach_workspace:
          at: ~/project
      - run: sentry-cli releases new <%= projectName %>-<%= packageName %>@${CIRCLE_SHA1}
      - run: sentry-cli releases files <%= projectName %>-<%= packageName %>@${CIRCLE_SHA1} upload-sourcemaps <%= packagePath %>/build
      - run: sentry-cli releases finalize <%= projectName %>-<%= packageName %>@${CIRCLE_SHA1}
<% } %>

<% if (deployment === 'kubernetes') { %>
  <%= packageName %>-build:
    executor: docker/docker
    steps:
      - setup_remote_docker:
          version: 20.10.11
      - checkout
      - docker/build:
          image: <%= projectName %>-<%= packageName %>
          path: <%= packagePath %>
          docker-context: <%= packagePath %>
          extra_build_args: '--build-arg VERSION=$(git log --max-count 1 --pretty=format:%H "<%= packagePath %>")'
  <%= packageName %>-build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker:
          version: 20.10.11
      - checkout
      - docker/build:
          registry: $DOCKER_REGISTRY
          image: <%= projectName %>-<%= packageName %>
          tag: << pipeline.git.branch >>
          path: <%= packagePath %>
          docker-context: <%= packagePath %>
          extra_build_args: '--build-arg VERSION=$(git log --max-count 1 --pretty=format:%H "<%= packagePath %>")'
      - docker/build:
          registry: $DOCKER_REGISTRY
          image: <%= projectName %>-<%= packageName %>
          tag: << pipeline.git.branch >>-sentry
          path: <%= packagePath %>
          docker-context: <%= packagePath %>
          extra_build_args: '--build-arg VERSION=$(git log --max-count 1 --pretty=format:%H "<%= packagePath %>") --target sentry'
      - docker/check:
          registry: $DOCKER_REGISTRY
      - docker/push:
          registry: $DOCKER_REGISTRY
          image: <%= projectName %>-<%= packageName %>
          tag: << pipeline.git.branch >>
      - run:
          name: Publish source maps to sentry
          command: |
            IMAGE="$DOCKER_REGISTRY/<%= projectName %>-<%= packageName %>:<< pipeline.git.branch >>-sentry"
            ENV="--env SENTRY_AUTH_TOKEN --env SENTRY_ORG --env SENTRY_PROJECT=<%= projectName %>-<%= packageName %>"
            VERSION=<%= projectName %>-<%= packageName %>@$(git log --max-count 1 --pretty=format:%H "<%= packagePath %>")

            docker run --rm $ENV $IMAGE releases new $VERSION
            docker run --rm $ENV $IMAGE releases files $VERSION upload-sourcemaps .
            docker run --rm $ENV $IMAGE releases finalize $VERSION
<% } %>

workflows:
  version: '2'
  build:
    jobs:
      - <%= packageName %>-yarn-install
      - <%= packageName %>-lint:
          requires:
            - <%= packageName %>-yarn-install
<% if (deployment === 'ansible') { %>
      - <%= packageName %>-build:
          requires:
            - <%= packageName %>-lint
      - <%= packageName %>-archive:
          requires:
            - <%= packageName %>-build
      - <%= packageName %>-sentry-release:
          context: sentry.io
          requires:
            - <%= packageName %>-build
          filters:
            branches:
              only:
                - develop
                - main
<% } %>
<% if (deployment === 'kubernetes') { %>
      - <%= packageName %>-build-and-push:
          context:
            - docker-registry
            - sentry.io
          requires:
            - <%= packageName %>-lint
          filters:
            branches:
              only:
                - develop
                - main
      - <%= packageName %>-build:
          requires:
            - <%= packageName %>-lint
          filters:
            branches:
              ignore:
                - develop
                - main
<% } %>
